/* Layout root */
.profileContainer {
  display: flex;
  min-height: 100vh;
  background-color: var(--bg);
  color: var(--text);
  font-family: "Tajawal", sans-serif;
  direction: ltr; /* default LTR; overridden by dir attribute on container */
  padding-top: 120px; /* Space for TopNav + Navbar */
}

/* Sidebar - default left for LTR */
.sidebar {
  width: 300px;
  background-color: var(--card);
  border-right: 1px solid var(--border);
  padding: 2rem;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  position: fixed;
  height: 100vh;
  overflow-y: auto;
  z-index: 100;
  left: 0;
  top: 0;
}

/* When container dir is rtl -> move sidebar to right */
.profileContainer[dir="rtl"] .sidebar {
  left: auto;
  right: 0;
  border-right: none;
  border-left: 1px solid var(--border);
}

/* Profile header in sidebar */
.profileHeader {
  text-align: center;
  padding-bottom: 2rem;
  border-bottom: 1px solid var(--border);
  margin-top: 120px;
}

.profileImage {
  width: 100px;
  height: 100px;
  margin: 0 auto 1rem;
  border-radius: 50%;
  overflow: hidden;
  border: 3px solid var(--accent);
}

.profileImage img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.profileHeader h3 {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0.5rem 0;
  color: var(--text);
}

.profileHeader p {
  color: var(--text-secondary);
  font-size: 0.9rem;
}

/* Sidebar nav */
.sidebarNav {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.navItem {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
  background: none;
  border: none;
  border-radius: 8px;
  color: var(--text-secondary);
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 1rem;
  text-align: left;
  direction: ltr;
}

/* In RTL, flip text align and direction inside nav items */
.profileContainer[dir="rtl"] .navItem {
  text-align: right;
  direction: rtl;
  /* flex-direction: row-reverse; */
}

/* Ensure nav item text is properly aligned */
.navItem span {
  text-align: inherit;
}

.navItem:hover {
  background-color: var(--hover);
  color: var(--text);
}

.navItem.active {
  background-color: var(--accent);
  color: white;
}

.navItem svg {
  font-size: 1.2rem;
}

/* ensure proper icon spacing both directions */
.navItem svg {
  margin-right: 0.5rem;
  margin-left: 0;
}
.profileContainer[dir="rtl"] .navItem svg {
  margin-right: 0;
  margin-left: 0.5rem;
}

/* Logout */
.logoutSection {
  margin-top: auto;
  padding-top: 2rem;
  border-top: 1px solid var(--border);
}

.logoutBtn {
  width: 100%;
  padding: 1rem;
  background-color: #dc3545;
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  text-align: center;
}

/* In RTL, align logout button text to the right */
.profileContainer[dir="rtl"] .logoutBtn {
  text-align: center;
}

.logoutBtn:hover {
  background-color: #c82333;
  transform: translateY(-2px);
}

/* Main content area - leave room for sidebar */
.mainContent {
  flex: 1;
  margin-left: 300px;
  padding: 2rem;
  background-color: var(--bg);
  min-height: 100vh;
}

/* For RTL move margin to right instead */
.profileContainer[dir="rtl"] .mainContent {
  margin-left: 0;
  margin-right: 300px;
}

/* Tab header */
.tabHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 2px solid var(--accent);
}

/* In RTL, reverse the tab header layout */
.profileContainer[dir="rtl"] .tabHeader {
  flex-direction: row-reverse;
}

.tabHeader h2 {
  font-size: 2rem;
  font-weight: 700;
  color: var(--text);
  margin: 0;
  text-align: left;
}

/* In RTL, align tab header title to the right */
.profileContainer[dir="rtl"] .tabHeader h2 {
  text-align: right;
}

.editBtn {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  background-color: var(--accent);
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

/* In RTL, reverse the edit button layout */
.profileContainer[dir="rtl"] .editBtn {
  flex-direction: row-reverse;
}

/* Ensure button text is properly aligned */
.editBtn span {
  text-align: inherit;
}

.editBtn:hover {
  background-color: #d32f2f;
  transform: translateY(-2px);
}

/* Forms */
.profileForm,
.passwordForm {
  background-color: var(--card);
  padding: 2rem;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.imageSection {
  display: flex;
  justify-content: center;
  margin-bottom: 2rem;
  padding-bottom: 2rem;
  border-bottom: 1px solid var(--border);
}

.formRow {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem;
  margin-bottom: 1.5rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.formGroup label {
  font-weight: 600;
  color: var(--text);
  font-size: 1rem;
  text-align: left;
}

/* In RTL, align labels to the right */
.profileContainer[dir="rtl"] .formGroup label {
  text-align: right;
}

/* Input base */
.input {
  padding: 0.75rem 1rem;
  border: 2px solid var(--border);
  border-radius: 8px;
  background-color: var(--bg);
  color: var(--text);
  font-size: 1rem;
  transition: all 0.3s ease;
  width: 100%;
  box-sizing: border-box;
  text-align: left;
}

/* In RTL, align input text to the right */
.profileContainer[dir="rtl"] .input {
  text-align: right;
}

.input:focus {
  outline: none;
  border-color: var(--accent);
  box-shadow: 0 0 0 3px rgba(235, 32, 39, 0.1);
}

.input:disabled {
  background-color: var(--disabled);
  color: var(--text-secondary);
  cursor: not-allowed;
}

/* Placeholder colors tuned for themes */
.input::placeholder {
  color: #ffffff;
  opacity: 0.7;
}

body[data-theme="light"] .input::placeholder {
  color: #000000;
  opacity: 0.7;
}

/* image upload */
.imageUpload {
  position: relative;
  display: inline-block;
  width: 120px;
  height: 120px;
  border-radius: 50%;
  overflow: hidden;
  border: 3px solid var(--accent);
}

.imageUpload img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.fileInput {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
  cursor: pointer;
}

/* Form actions */
.formActions {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-top: 2rem;
  padding-top: 2rem;
  border-top: 1px solid var(--border);
}

.profileContainer[dir="rtl"] .formActions {
  justify-content: flex-start;
}

.saveBtn {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem 2rem;
  background-color: var(--accent);
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
}

/* In RTL, reverse the save button layout */
.profileContainer[dir="rtl"] .saveBtn {
  flex-direction: row-reverse;
}

/* Ensure save button text is properly aligned */
.saveBtn span {
  text-align: inherit;
}

.saveBtn:hover {
  background-color: #d32f2f;
  transform: translateY(-2px);
}

/* Loading spinner */
.loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background-color: var(--bg);
  color: var(--text);
}

.spinner {
  width: 50px;
  height: 50px;
  border: 4px solid var(--border);
  border-top: 4px solid var(--accent);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Light Mode tweaks (keeps previous rules but ensures consistent look) */
body[data-theme="light"] .profileContainer {
  background-color: #ffffff;
  color: #000000;
}
body[data-theme="light"] .sidebar {
  background-color: #f8f9fa;
  border-left-color: #e9ecef;
}
body[data-theme="light"] .profileHeader h3 {
  color: #000000;
}
body[data-theme="light"] .profileHeader p {
  color: #6c757d;
}
body[data-theme="light"] .navItem {
  color: #6c757d;
}
body[data-theme="light"] .navItem:hover {
  background-color: #e9ecef;
  color: #000000;
}
body[data-theme="light"] .navItem.active {
  background-color: var(--accent);
  color: white;
}
body[data-theme="light"] .logoutSection {
  border-top-color: #e9ecef;
}
body[data-theme="light"] .mainContent {
  background-color: #ffffff;
}
body[data-theme="light"] .tabHeader h2 {
  color: #000000;
}
body[data-theme="light"] .profileForm,
body[data-theme="light"] .passwordForm {
  background-color: #f8f9fa;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
}
body[data-theme="light"] .formGroup label {
  color: #000000;
}
body[data-theme="light"] .input {
  background-color: #ffffff;
  color: #000000;
  border-color: #e9ecef;
}
body[data-theme="light"] .input:disabled {
  background-color: #f8f9fa;
  color: #6c757d;
}
body[data-theme="light"] .formActions {
  border-top-color: #e9ecef;
}
body[data-theme="light"] .loading {
  background-color: #ffffff;
  color: #000000;
}
body[data-theme="light"] .spinner {
  border-color: #e9ecef;
  border-top-color: var(--accent);
}

/* Password input wrapper - eye inside field */
.passwordInputWrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.passwordInputWrapper .input {
  padding-right: 3rem; /* room for icon on right by default */
  padding-left: 1rem;
}

/* In RTL flip paddings so icon doesn't overlap text */
.profileContainer[dir="rtl"] .passwordInputWrapper .input {
  padding-left: 3rem;
  padding-right: 1rem;
}

/* Eye toggle button placed inside input */
.passwordToggle {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  right: 0.6rem;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.05rem;
  color: var(--text-secondary);
}

/* In RTL move icon to left */
.profileContainer[dir="rtl"] .passwordToggle {
  left: 0.6rem;
  right: auto;
}

/* Make button accessible focus */
.passwordToggle:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(235, 32, 39, 0.12);
}

/* Responsive */
@media (max-width: 768px) {
  .profileContainer {
    flex-direction: column;
    padding-top: 0;
  }

  .sidebar {
    position: static;
    width: 100%;
    height: auto;
    padding: 1rem;
    border: none;
    left: auto;
    top: auto;
  }

  .mainContent {
    margin-right: 0;
    margin-left: 0;
    padding: 1rem;
  }

  .formRow {
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .tabHeader {
    flex-direction: column;
    gap: 1rem;
    align-items: flex-start;
  }

  .tabHeader h2 {
    font-size: 1.5rem;
  }

  .profileForm,
  .passwordForm {
    padding: 1rem;
  }

  .formActions {
    flex-direction: column;
  }

  .saveBtn {
    width: 100%;
    justify-content: center;
  }

  /* On mobile ensure password icon still sits correctly */
  .passwordToggle {
    right: 0.5rem;
  }
  .profileContainer[dir="rtl"] .passwordToggle {
    left: 0.5rem;
    right: auto;
  }
}

@media (max-width: 480px) {
  .sidebar {
    padding: 0.5rem;
  }
  .mainContent {
    padding: 0.5rem;
  }
  .profileForm,
  .passwordForm {
    padding: 0.5rem;
  }
  .profileImage {
    width: 80px;
    height: 80px;
  }
  .imageUpload {
    width: 100px;
    height: 100px;
  }
}
